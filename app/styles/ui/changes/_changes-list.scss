@import '../../mixins';

#changes-list {
  min-height: 0;
}

/** A React component holding the currently selected repository's changes */
.changes-list-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  min-height: 100px;

  .header {
    background: var(--box-alt-background-color);
    border-bottom: 1px solid var(--box-border-color);
    padding: 0 var(--spacing);
    height: 29px;
    flex: 0 0 auto;
  }

  .changes-list-check-all {
    align-items: center;
    height: 100%;
    position: relative;

    // We want the label to be positioned center with regards to the entire
    // header so we position it absolute in relation to the checkbox component
    // and give it a 100% width with padding on each side as to balance it out
    // while still providing enough space for the checkbox.
    label {
      position: absolute;
      left: 0;
      width: 100%;
      padding: 0 30px;
      text-align: center;

      @include ellipsis;
    }

    input[type='checkbox'] {
      flex-grow: 0;
      flex-shrink: 0;
    }
  }

  &.filtered-changes-list {
    .filter-popover {
      text-align: right;

      .filter-popover-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        h3 {
          margin-bottom: var(--spacing-half);
        }
      }

      .filter-options {
        margin: var(--spacing) 0;
      }

      .filter-warning-text {
        max-width: 200px;
        text-align: left;
      }

      .popover-content {
        padding: var(--spacing);
      }

      @include close-button;

      .close {
        margin: 0;
      }
    }

    .header {
      display: flex;
      height: auto;
      flex-direction: column;
      padding: var(--spacing-half) var(--spacing);
      margin: 0;

      .filter-box-container {
        display: flex;
        align-items: center;
        margin-bottom: var(--spacing-half);
        transition: all 0.3s ease-out;
      }

      .checkbox-container {
        display: flex;
        align-items: center;

        .spacer {
          flex-grow: 1;
        }

        .beta-pill {
          background: -webkit-linear-gradient(-70deg, #9867f0 0%, #ed4e50 100%);
          padding: 1px;
          border-radius: 2em;
          margin-right: var(--spacing-half);
          display: inline-block;
          height: 20px;

          > span {
            background: var(--box-alt-background-color);
            border-radius: 2em;
            padding: 0 var(--spacing-half);
            display: inline-block;

            > span { 
              background: -webkit-linear-gradient(-70deg, #9867f0 0%, #ed4e50 100%);
              -webkit-background-clip: text;
              background-clip: text;
              -webkit-text-fill-color: transparent;
              -webkit-box-decoration-break: clone;
              font-weight: 600 !important;
              font-size: var(--font-size-sm);
              padding-bottom:2px;
            }
          }

          
        }

        .filter-button {
          padding: 0;
          height: auto;
          border: none;

          &.active {
            color: var(--box-selected-active-background-color);
          }

          &.remove-filter {
            margin-right: var(--spacing-half);
            color: var(--box-selected-active-background-color);
          }

          &.hidden-files-warning {
            margin-right: var(--spacing-half);
          }

          &:hover {
            color: var(--text-secondary-color);
            background-color: inherit;
          }
        }
      }

      label {
        text-align: right;
        padding: 0 var(--spacing-half);
      }
    }
  }

  .filter-list {
    // This is important when app is zoomed in. Otherwise, the filter list
    // will be overlapped by the commit message form.
    min-height: 0;
  }

  .no-changes-in-list {
    text-align: center;
    padding: var(--spacing-double);
  }
}

.stashed-changes-button {
  @include ellipsis;
  min-height: 29px;

  display: flex;
  align-items: center;
  flex-grow: 1;
  padding: 0 var(--spacing);
  width: 100%;

  // Chrome on Windows ignores the body element
  // font-family and uses Arial so we redefine
  // it here
  font-family: var(--font-family-sans-serif);
  font-size: var(--font-size);

  padding: 0 var(--spacing);

  color: var(--secondary-button-text-color);
  background-color: var(--secondary-button-background);

  border: none;
  border-top: var(--base-border);
  box-shadow: none;
  z-index: 0;

  &:disabled {
    opacity: 0.6;
  }

  &:hover,
  &:focus {
    background-color: var(--secondary-button-hover-background);
    background: var(--box-selected-background-color);
  }
  &.selected,
  &.selected:hover {
    color: var(--box-selected-active-text-color);
    background-color: var(--box-selected-active-background-color);
    .stack-icon {
      fill: var(--box-selected-active-text-color);
    }
  }

  .stack-icon {
    fill: var(--color-modified);
  }

  .text {
    flex-grow: 1;
    margin: 0 var(--spacing-half);
    text-align: start;
  }

  .octicon {
    flex-shrink: 0;
  }
}

.undo-enter {
  max-height: 0;
  overflow: hidden;
}

.undo-enter.undo-enter-active {
  // It doesn't really matter what `maxHeight` we set here so long as it's
  // greater than or equal to the height that `UndoCommit` will want.
  max-height: 200px;

  transition: max-height var(--undo-animation-duration) ease-in;
}

.undo-exit {
  max-height: 200px;
}

.undo-exit.undo-exit-active {
  max-height: 0;

  transition: max-height var(--undo-animation-duration) ease-out;
}


 // animations for entering and leaving
 .filter-box-enter {
  height: 0px;
  opacity: 0;

  &.filter-box-enter-active {
    height: 25px;
    opacity: 1;
    transition: max-height 300ms ease-in-out, opacity 200ms ease-in 300ms;
  }
}

.filter-box-exit {
  height: 25px;
  opacity: 1;

  &.filter-box-exit-active {
    height: 0px;
    opacity: 0;
    transition: max-height 225ms ease-in-out 175ms, opacity 175ms ease-in;
  }
}
